# server {
#     listen 80;
#     listen [::]:80;
#     server_name cloudimagewall.xyz www.cloudimagewall.xyz;
#     return 301 https://$server_name$request_uri;
# }

# server {
#     # SSL configuration
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     ssl        on;
#     ssl_certificate         /etc/nginx/certs/default.crt;
#     ssl_certificate_key     /etc/nginx/certs/default.key;
#     ssl_client_certificate  /etc/nginx/certs/cloudflare.crt;
#     ssl_verify_client on;

#     server_name cloudimagewall.xyz www.cloudimagewall.xyz;
    
#     location / {
#         client_max_body_size 30M;

#         proxy_set_header    Host               $http_host;
#         proxy_set_header    X-Real-IP          $remote_addr;
#         proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;

#         # Secure nginx
#         proxy_hide_header   X-Powered-By;
#         add_header          X-Frame-Options SAMEORIGIN;
#         server_tokens       off;

#         # session config
#         # This is what tells Connect that your session can be considered secure, 
#         # even though the protocol node.js sees is only HTTP:      
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_set_header X-NginX-Proxy true;
#         proxy_read_timeout 20;
#         proxy_connect_timeout 2;

#         proxy_pass http://node-app:3000;
#         proxy_redirect off;

#         # enable WebSockets
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
        
#     }
# }