<style>
    #navbar {
        background: var(--background-color);
    }
    html, body {
        background: var(--foreground-color);
    }
</style>
<categories-wrapper id="categories-wrapper">
    <div class="categories-inner">
        <ul class="categories">
            <li onclick="location = this.children[0].href" class="category active">
            <a href="/comic/categories/all">All</a>
            </li>
            {{#each firstCategories}}
            <li onclick="location = this.children[0].href" class="category"><a href="/comic/categories/{{this.name}}">{{this.name}}</a></li>
            {{/each}}
            <li class="category"><div onclick="return drop(this);" class="more">More<i class="fas fa-sort-down"></i></div></li>
        </ul>
    </div>
    <div id="categories-outer" class="categories-outer">
        <ul class="categories">
            {{#each remainingCategories}}
            <li onclick="location = this.children[0].href" class="category"><a href="/comic/categories/{{this.name}}">{{this.name}}</a></li>
            {{/each}}
        </ul>
    </div>
</categories-wrapper>


<newest-places id="newest-places"></newest-places>

<script id="history-template" type="text/x-handlebars-template">
    <wrapper-big class="container">

        <heading class="container">
            <title class="title">
                Recently Viewed
            </title>
            <icon-right>
                <i class="fas fa-chevron-right"></i>
            </icon-right>
        </heading>

        <grid-container>
            \{{#each comics}}
            <item class="item item--border">
                <img width="92" height="120" loading="lazy" src="https://s3.eu-central-1.wasabisys.com/cloudimagewallbucket/\{{this.thumbnail}}-thumbnail.webp
                    " alt="">
                <info>
                    <a href="./comic/\{{this.comicSlug}}">
                        <title class="title title--ellipsis">\{{this.title}}</title>
                    </a>
                    <chapter-box style="display: flex;flex-direction:column;">
                        \{{#each (limitlast chapterNameList 2)}}
                        <a href="/comic/\{{../this.comicSlug}}/\{{this.chapter}}">
                            <chapter id="chapter-\{{this._id}}">\{{replaceHyphenIntoSpace this.chapter}}
                                {{!-- <span class="left-auto">\{{CalcTimeEnglish this.updatedAt}}</span> --}}
                            </chapter>
                        </a>
                        \{{/each}}
                    </chapter-box>
                </info>
            </item>
            \{{/each}}
        </grid-container>

    </wrapper-big>
</script>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.js"></script>

<script>
    

    $( document ).ready(function() {

        var $href = window.location.href;
        var $user_id = $("input[type=hidden][name=user_id]").val()
        var isLoggedIn = ($user_id) ? true : false
        /* local History */

        constructHistory()
        
        function addClassVisited() {

            //filter remove empty string in array
            var visited_chapters_list = JSON.parse(localStorage.getItem('visited_chapters')).filter(items => items);
            if (visited_chapters_list == null ) return

            var $glide2      = $('#glide_2')
            var $newestplaces = $('#newest-places')

            for (let i = 0; i < visited_chapters_list.length; i++) {
                $glide2.find(`#chapter-${visited_chapters_list[i]}`).addClass('visited')
                $newestplaces.find(`#chapter-${visited_chapters_list[i]}`).addClass('visited')
            }
            
        }
        
        function constructHistory() {
            var visited_comics_list = JSON.parse(localStorage.getItem('visited_comics'));
            if (visited_comics_list == null) return

            /* helper */
            Handlebars.registerHelper('ifCond', function (a, operator, b, options) {
                switch (operator) {
                    case '==':
                        return (a == b) ? options.fn(this) : options.inverse(this);
                    case '===':
                        return (a === b) ? options.fn(this) : options.inverse(this);
                    case '!=':
                        return (a != b) ? options.fn(this) : options.inverse(this);
                    case '!==':
                        return (a !== b) ? options.fn(this) : options.inverse(this);
                    case '<':
                        return (a < b) ? options.fn(this) : options.inverse(this);
                    case '<=':
                        return (a <= b) ? options.fn(this) : options.inverse(this);
                    case '>':
                        return (a > b) ? options.fn(this) : options.inverse(this);
                    case '>=':
                        return (a >= b) ? options.fn(this) : options.inverse(this);
                    case '&&':
                        return (a && b) ? options.fn(this) : options.inverse(this);
                    case '||':
                        return (a || b) ? options.fn(this) : options.inverse(this);
                    default:
                        return options.inverse(this);
                }
            })
            Handlebars.registerHelper('limitlast', (arr, limit) => {
                if (!Array.isArray(arr)) { return []; }
                return arr.slice(arr.length - limit, arr.length);
            }) 
            Handlebars.registerHelper('replaceHyphenIntoSpace', (str) => {
                str = str.toString().replace(/-/g, ' ').replace("apter", '.');
                return str && str[0].toUpperCase() + str.slice(1);// replace '-' -> space 
            })
            var content             = visited_comics_list
            var source              = $("#history-template").html()
            var template            = Handlebars.compile(source)
            var html                = template({comics: content})
            console.log(content)
            //console.log(content)
            //console.log(html)
            $('#newest-places').append(html).slideDown('slow')
            addClassVisited()
        }

        /* ðŸ›‘ end local History */
        
    });
</script>
